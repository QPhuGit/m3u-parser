name: Test and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
        
    - name: Test import and basic functionality
      run: |
        python -c "
        from m3uparse import parse_m3u_and_split_by_group_title
        print('Import successful')
        
        # Test with a simple M3U content
        import tempfile
        import os
        
        test_content = '''#EXTM3U
#EXTINF:-1 group-title=\"Test Group\",Test Channel
http://example.com/stream1
#EXTINF:-1 group-title=\"Another Group\",Another Channel
http://example.com/stream2
'''
        
        with tempfile.NamedTemporaryFile(mode='w', suffix='.m3u', delete=False) as f:
            f.write(test_content)
            temp_file = f.name
            
        try:
            parse_m3u_and_split_by_group_title(temp_file, 'test')
            print('Basic functionality test passed')
        finally:
            os.unlink(temp_file)
            # Clean up generated files
            for file in os.listdir('.'):
                if file.startswith('test_') and file.endswith('.m3u'):
                    os.unlink(file)
        "

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy notification
      run: |
        echo "Code has been tested and is ready for deployment"
        echo "Automated M3U updates will use the latest code"
